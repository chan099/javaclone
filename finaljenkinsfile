node{
  stage('scm checkout'){
    git 'https://github.com/sandeep212/javaclone.git'
  }
  stage('mvn buid'){
    sh 'mvn package'
  }
  stage('analysing the souce code'){
    withSonarQubeEnv('sonarqube') {
      sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
    }
  }
  stage("Quality Gate"){
    timeout(time: 1, unit: 'HOURS') {
             def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  slackSend baseUrl: 'https://hooks.slack.com/services/', 
                  channel: 'jenkinsnotifications', 
                  color: 'danger', 
                  message: 'build fail due to quality gates ', 
                  tokenCredentialId: 'slack2'
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
           
                }
          }
      }    
  stage('Nexus artifactory uploader'){
    nexusArtifactUploader artifacts: [[artifactId: '$BUILD_TIMESTAMP', classifier: '',
    file: '/var/lib/jenkins/workspace/final-jenkins-pipeline/target/myweb-0.0.1.war',
    type: 'war']], credentialsId: 'nexus',
    groupId: 'dev',
    nexusUrl: '18.188.240.36:8081/nexus', nexusVersion: 'nexus2', protocol: 'http', repository: 'java', version: '$BUILD_ID'

  }
  stage('email notifications'){
    mail bcc: '', 
    body: 'job build sucessfully', 
    cc: '', from: '', 
    replyTo: '', 
    subject: 'from jenkins', 
    to: 'sandeepchowdary212@gmail.com'
  }
  stage('slack notifications'){
    slackSend baseUrl: 'https://hooks.slack.com/services/', 
    channel: 'jenkinsnotifications', 
    color: 'good', 
    message: 'slack notification from jenkins ', 
    tokenCredentialId: 'slack2'
  }
  
}
